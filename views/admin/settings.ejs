<%- include('../partials/header') %>

<div class="admin-container">
    <div class="admin-header">
        <h2 class="page-title">システム設定</h2>
        <p class="breadcrumb">
            <a href="/admin">管理者ダッシュボード</a> / システム設定
        </p>
    </div>

    <!-- メッセージ表示 -->
    <% if (message) { %>
    <div class="alert alert-success">
        <%= message %>
    </div>
    <% } %>

    <!-- 設定フォーム -->
    <div class="settings-container">
        <form method="POST" action="/admin/settings" class="settings-form">
            
            <!-- 新規登録設定 -->
            <div class="setting-section">
                <div class="setting-header">
                    <h3>新規ユーザー登録</h3>
                    <p>新しいユーザーの登録を受け付けるかどうかを設定します。</p>
                </div>
                <div class="setting-control">
                    <label class="toggle-switch">
                        <input type="checkbox" name="allowRegistration" 
                               <%= settings.allowRegistration ? 'checked' : '' %>>
                        <span class="toggle-slider"></span>
                        <span class="toggle-label">新規ユーザーの登録を受け付ける</span>
                    </label>
                </div>
            </div>

            <!-- メンテナンスモード設定 -->
            <div class="setting-section">
                <div class="setting-header">
                    <h3>メンテナンスモード</h3>
                    <p>システムメンテナンス時に有効にすると、一般ユーザーのアクセスを制限します。</p>
                </div>
                <div class="setting-control">
                    <label class="toggle-switch">
                        <input type="checkbox" name="maintenanceMode" 
                               <%= settings.maintenanceMode ? 'checked' : '' %>>
                        <span class="toggle-slider"></span>
                        <span class="toggle-label">メンテナンスモードを有効にする</span>
                    </label>
                </div>
            </div>

            <!-- 登録メッセージ設定 -->
            <div class="setting-section">
                <div class="setting-header">
                    <h3>登録画面メッセージ</h3>
                    <p>新規登録画面に表示するメッセージを設定できます。</p>
                </div>
                <div class="setting-control">
                    <textarea name="registrationMessage" 
                              placeholder="登録画面に表示するメッセージを入力してください（任意）"
                              rows="4" autocomplete="off"><%= settings.registrationMessage || '' %></textarea>
                </div>
            </div>

            <!-- 自動削除設定 -->
            <div class="setting-section">
                <div class="setting-header">
                    <h3>非アクティブユーザーの自動削除</h3>
                    <p>30日間非アクティブでクイズが1週間解かれていないユーザーを自動削除します。管理者は削除対象外です。</p>
                </div>
                <div class="setting-control">
                    <label class="toggle-switch">
                        <input type="checkbox" name="autoCleanupEnabled" 
                               <%= settings.autoCleanupEnabled ? 'checked' : '' %>>
                        <span class="toggle-slider"></span>
                        <span class="toggle-label">自動削除機能を有効にする</span>
                    </label>
                </div>
                <% if (settings.autoCleanupEnabled) { %>
                <div class="setting-actions" style="margin-top: 16px; padding-top: 0; border-top: none;">
                    <form method="POST" action="/admin/cleanup" style="display: inline;">
                        <button type="submit" class="btn btn-warning" onclick="return confirm('非アクティブユーザーの削除を実行しますか？この操作は取り消せません。')">
                            今すぐクリーンアップを実行
                        </button>
                    </form>
                </div>
                <% } %>
            </div>

            <!-- 保存ボタン -->
            <div class="setting-actions">
                <button type="submit" class="btn btn-primary" id="saveButton">
                    <span class="button-text">設定を保存</span>
                    <span class="button-loading" style="display: none;">
                        <svg class="loading-spinner" viewBox="0 0 24 24">
                            <circle cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2" stroke-dasharray="31.416" stroke-dashoffset="31.416">
                                <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/>
                                <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416" repeatCount="indefinite"/>
                            </circle>
                        </svg>
                        保存中...
                    </span>
                </button>
                <a href="/admin" class="btn btn-secondary">キャンセル</a>
            </div>
        </form>
    </div>

    <!-- 現在の設定状況 -->
    <div class="current-status">
        <h3>現在の設定状況</h3>
        <div class="status-grid">
            <div class="status-card">
                <div class="status-icon <%= settings.allowRegistration ? 'enabled' : 'disabled' %>">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                        <circle cx="8.5" cy="7" r="4"></circle>
                        <line x1="20" y1="8" x2="20" y2="14"></line>
                        <line x1="23" y1="11" x2="17" y2="11"></line>
                    </svg>
                </div>
                <div class="status-content">
                    <h4>新規ユーザー登録</h4>
                    <p class="status-value <%= settings.allowRegistration ? 'enabled' : 'disabled' %>">
                        <%= settings.allowRegistration ? '受付中' : '停止中' %>
                    </p>
                </div>
            </div>

            <div class="status-card">
                <div class="status-icon <%= settings.maintenanceMode ? 'disabled' : 'enabled' %>">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                        <path d="M9 12l2 2 4-4"></path>
                    </svg>
                </div>
                <div class="status-content">
                    <h4>システム状態</h4>
                    <p class="status-value <%= settings.maintenanceMode ? 'disabled' : 'enabled' %>">
                        <%= settings.maintenanceMode ? 'メンテナンス中' : '稼働中' %>
                    </p>
                </div>
            </div>

            <div class="status-card">
                <div class="status-icon <%= settings.autoCleanupEnabled ? 'enabled' : 'disabled' %>">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <polyline points="3,6 5,6 21,6"></polyline>
                        <path d="m19,6v14a2,2 0 0,1-2,2H7a2,2 0 0,1-2-2V6m3,0V4a2,2 0 0,1 2-2h4a2,2 0 0,1 2,2v2"></path>
                        <line x1="10" y1="11" x2="10" y2="17"></line>
                        <line x1="14" y1="11" x2="14" y2="17"></line>
                    </svg>
                </div>
                <div class="status-content">
                    <h4>自動削除機能</h4>
                    <p class="status-value <%= settings.autoCleanupEnabled ? 'enabled' : 'disabled' %>">
                        <%= settings.autoCleanupEnabled ? '有効' : '無効' %>
                    </p>
                </div>
            </div>
        </div>

        <% if (settings.registrationMessage) { %>
        <div class="message-preview">
            <h4>登録画面メッセージプレビュー</h4>
            <div class="preview-box">
                <%= settings.registrationMessage %>
            </div>
        </div>
        <% } %>
    </div>
</div>

<style>
.admin-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

.admin-header {
    margin-bottom: 30px;
}

.breadcrumb {
    color: #666;
    font-size: 0.9em;
    margin-top: 8px;
}

.breadcrumb a {
    color: #4a90e2;
    text-decoration: none;
}

.breadcrumb a:hover {
    text-decoration: underline;
}

.alert {
    padding: 12px 16px;
    border-radius: 8px;
    margin-bottom: 20px;
}

.alert-success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.settings-container {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    padding: 32px;
    margin-bottom: 30px;
}

.setting-section {
    margin-bottom: 32px;
    padding-bottom: 24px;
    border-bottom: 1px solid #e9ecef;
}

.setting-section:last-of-type {
    border-bottom: none;
    margin-bottom: 0;
}

.setting-header {
    margin-bottom: 16px;
}

.setting-header h3 {
    margin: 0 0 8px 0;
    color: #333;
    font-size: 1.1em;
}

.setting-header p {
    margin: 0;
    color: #666;
    font-size: 0.9em;
    line-height: 1.5;
}

.setting-control {
    margin-top: 16px;
}

.toggle-switch {
    display: flex;
    align-items: center;
    cursor: pointer;
    gap: 12px;
}

.toggle-switch input[type="checkbox"] {
    display: none;
}

.toggle-slider {
    position: relative;
    width: 48px;
    height: 24px;
    background: #ccc;
    border-radius: 12px;
    transition: background 0.3s;
}

.toggle-slider::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    transition: transform 0.3s;
}

.toggle-switch input[type="checkbox"]:checked + .toggle-slider {
    background: #4a90e2;
}

.toggle-switch input[type="checkbox"]:checked + .toggle-slider::before {
    transform: translateX(24px);
}

.toggle-label {
    font-weight: 500;
    color: #333;
}

textarea {
    width: 100%;
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-family: inherit;
    font-size: 0.9em;
    line-height: 1.5;
    resize: vertical;
}

textarea:focus {
    outline: none;
    border-color: #4a90e2;
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
}

.setting-actions {
    margin-top: 32px;
    padding-top: 24px;
    border-top: 1px solid #e9ecef;
    display: flex;
    gap: 12px;
}

.btn {
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    font-size: 0.9em;
    font-weight: 500;
    cursor: pointer;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    transition: background-color 0.2s;
}

.btn-primary {
    background: #4a90e2;
    color: white;
}

.btn-primary:hover {
    background: #357abd;
}

.btn-secondary {
    background: #6c757d;
    color: white;
}

.btn-secondary:hover {
    background: #545b62;
}

.btn-warning {
    background: #ffc107;
    color: #212529;
}

.btn-warning:hover {
    background: #e0a800;
}

.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

.button-loading {
    display: flex;
    align-items: center;
    gap: 8px;
}

.loading-spinner {
    width: 16px;
    height: 16px;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.current-status {
    background: #f8f9fa;
    border-radius: 12px;
    padding: 24px;
}

.current-status h3 {
    margin: 0 0 20px 0;
    color: #333;
}

.status-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 24px;
}

.status-card {
    background: white;
    border-radius: 8px;
    padding: 20px;
    display: flex;
    align-items: center;
    gap: 16px;
}

.status-icon {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.status-icon.enabled {
    background: #d4edda;
    color: #155724;
}

.status-icon.disabled {
    background: #f8d7da;
    color: #721c24;
}

.status-content h4 {
    margin: 0 0 4px 0;
    color: #333;
    font-size: 0.9em;
}

.status-value {
    margin: 0;
    font-weight: 500;
    font-size: 0.85em;
}

.status-value.enabled {
    color: #155724;
}

.status-value.disabled {
    color: #721c24;
}

.message-preview {
    margin-top: 24px;
}

.message-preview h4 {
    margin: 0 0 12px 0;
    color: #333;
    font-size: 0.9em;
}

.preview-box {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 16px;
    color: #666;
    font-size: 0.9em;
    line-height: 1.5;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.settings-form');
    const saveButton = document.getElementById('saveButton');
    const buttonText = saveButton.querySelector('.button-text');
    const buttonLoading = saveButton.querySelector('.button-loading');
    
    if (form && saveButton) {
        form.addEventListener('submit', function(e) {
            // Prevent double submission
            if (saveButton.disabled) {
                e.preventDefault();
                return;
            }
            
            // Show loading state immediately
            saveButton.disabled = true;
            buttonText.style.display = 'none';
            buttonLoading.style.display = 'flex';
            
            // Add visual feedback class
            saveButton.classList.add('loading');
            
            // Ensure minimum loading state visibility (500ms) for better UX
            setTimeout(function() {
                // This ensures the loading state is visible for at least 500ms
                // even on very fast connections
            }, 500);
        });
        
        // Handle form submit errors (if any) to reset button state
        window.addEventListener('beforeunload', function() {
            // Reset button state on page unload
            resetButtonState();
        });
        
        function resetButtonState() {
            if (saveButton) {
                saveButton.disabled = false;
                buttonText.style.display = 'inline';
                buttonLoading.style.display = 'none';
                saveButton.classList.remove('loading');
            }
        }
        
        // Reset button state if form submission fails or returns immediately
        setTimeout(function() {
            if (saveButton.disabled) {
                resetButtonState();
            }
        }, 5000); // Reset after 5 seconds as a fallback
    }
});
</script>

<%- include('../partials/footer') %>