<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Synapse Note</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <%- include('../partials/navbar', { user: user }) %>
    
    <div class="container mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1><i class="fas fa-trophy"></i> 大会一覧</h1>
                    <div>
                        <% if (user && user.isAdmin) { %>
                        <a href="/tournaments/create" class="btn btn-primary me-2">
                            <i class="fas fa-plus"></i> 大会作成
                        </a>
                        <button onclick="generateTestData()" class="btn btn-outline-secondary">
                            <i class="fas fa-flask"></i> テストデータ生成
                        </button>
                        <% } %>
                    </div>
                </div>

                <% if (tournaments && tournaments.length > 0) { %>
                <div class="row">
                    <% tournaments.forEach(tournament => { %>
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title"><%= tournament.name %></h5>
                                    <span class="badge bg-<%= getStatusColor(tournament.status) %>">
                                        <%= getStatusText(tournament.status) %>
                                    </span>
                                </div>
                                
                                <p class="card-text text-muted">
                                    <%= tournament.description || '説明なし' %>
                                </p>
                                
                                <div class="row text-center mb-3">
                                    <div class="col-6">
                                        <small class="text-muted">参加者</small>
                                        <div class="fw-bold">0/<%= tournament.maxParticipants %></div>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted">参加費</small>
                                        <div class="fw-bold">
                                            <% if (tournament.entryFee > 0) { %>
                                            ¥<%= tournament.entryFee %>
                                            <% } else { %>
                                            無料
                                            <% } %>
                                        </div>
                                    </div>
                                </div>

                                <% if (tournament.startDate) { %>
                                <div class="mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> 
                                        <%= new Date(tournament.startDate).toLocaleDateString('ja-JP') %>
                                    </small>
                                </div>
                                <% } %>
                            </div>
                            
                            <div class="card-footer">
                                <a href="/tournaments/<%= tournament.id %>" class="btn btn-primary btn-sm">
                                    <i class="fas fa-eye"></i> 詳細
                                </a>
                                <% if (tournament.status === 'upcoming' && user) { %>
                                <button onclick="joinTournament('<%= tournament.id %>')" class="btn btn-success btn-sm">
                                    <i class="fas fa-user-plus"></i> 参加
                                </button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    <% }); %>
                </div>
                <% } else { %>
                <div class="text-center py-5">
                    <i class="fas fa-trophy fa-3x text-muted mb-3"></i>
                    <h4>大会がありません</h4>
                    <p class="text-muted">まだ大会が作成されていません。</p>
                    <% if (user && user.isAdmin) { %>
                    <a href="/tournaments/create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> 最初の大会を作成
                    </a>
                    <% } %>
                </div>
                <% } %>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function getStatusColor(status) {
            switch(status) {
                case 'upcoming': return 'primary';
                case 'active': return 'success';
                case 'completed': return 'secondary';
                case 'cancelled': return 'danger';
                default: return 'secondary';
            }
        }

        function getStatusText(status) {
            switch(status) {
                case 'upcoming': return '開催予定';
                case 'active': return '開催中';
                case 'completed': return '終了';
                case 'cancelled': return '中止';
                default: return '不明';
            }
        }

        async function joinTournament(tournamentId) {
            try {
                const response = await fetch(`/tournaments/${tournamentId}/join`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const result = await response.json();
                
                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert(result.error || 'エラーが発生しました。');
                }
            } catch (error) {
                console.error('Error joining tournament:', error);
                alert('ネットワークエラーが発生しました。');
            }
        }

        async function generateTestData() {
            if (!confirm('テストデータを生成しますか？これにより複数の大会と参加者が作成されます。')) {
                return;
            }

            try {
                const response = await fetch('/tournaments/test/generate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        tournamentCount: 2,
                        participantsPerTournament: 8
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert(result.error || 'エラーが発生しました。');
                }
            } catch (error) {
                console.error('Error generating test data:', error);
                alert('ネットワークエラーが発生しました。');
            }
        }
    </script>

    <%
    function getStatusColor(status) {
        switch(status) {
            case 'upcoming': return 'primary';
            case 'active': return 'success';
            case 'completed': return 'secondary';
            case 'cancelled': return 'danger';
            default: return 'secondary';
        }
    }

    function getStatusText(status) {
        switch(status) {
            case 'upcoming': return '開催予定';
            case 'active': return '開催中';
            case 'completed': return '終了';
            case 'cancelled': return '中止';
            default: return '不明';
        }
    }
    %>
</body>
</html>